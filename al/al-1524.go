// 和为奇数的子数组数目
// medium
/*
* 给你一个整数数组 arr 。请你返回和为 奇数 的子数组数目。
*
* 由于答案可能会很大，请你将结果对 10^9 + 7 取余后返回。
*
* 示例 1：
*
* 输入：arr = [1,3,5]
* 输出：4
* 解释：所有的子数组为 [[1],[1,3],[1,3,5],[3],[3,5],[5]] 。
* 所有子数组的和为 [1,4,9,3,8,5].
* 奇数和包括 [1,9,3,5] ，所以答案为 4 。
* 示例 2 ：
*
* 输入：arr = [2,4,6]
* 输出：0
* 解释：所有子数组为 [[2],[2,4],[2,4,6],[4],[4,6],[6]] 。
* 所有子数组和为 [2,6,12,4,10,6] 。
* 所有子数组和都是偶数，所以答案为 0 。
* 示例 3：
*
* 输入：arr = [1,2,3,4,5,6,7]
* 输出：16
* 示例 4：
*
* 输入：arr = [100,100,99,99]
* 输出：4
* 示例 5：
*
* 输入：arr = [7]
* 输出：1
*
*
* 提示：
*
* 1 <= arr.length <= 10^5
* 1 <= arr[i] <= 100
*
* 来源：力扣（LeetCode）
* 链接：https://leetcode-cn.com/problems/number-of-sub-arrays-with-odd-sum
* 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
*
* ---------------------------------------------------------------
* 题解：前缀和
* 可以用记录前缀和的方式来计算子数组和，但是此题只看奇偶性，所以不用求前缀和，知道奇偶情况就ok
* 然后既然是要看子数组和为奇数的个数，那么也不用挨个记下前缀奇偶性，只需两个变量 odd，even 记录奇偶个数即可
* 怎么计算奇偶个数？
* 1. 如果当前 i 位置的前缀和为偶数，前面某一位置 j 的前缀和为奇数，那么从 j + 1 到 i 的和为奇数，所以看 i 之前有几个 j，
* 即看 i 之前有多少个奇数前缀和 odd，就是 i 位置有多少个奇数子数组和
* 2. 反之亦然，如果 i 前缀和是奇数，那么找 i 之前有多少个偶数前缀和即可
 */

package main

import (
	"fmt"
	"math"
)

func main() {
	arr := []int{1, 3, 5}
	fmt.Println(numOfSubarrays(arr))
}

func numOfSubarrays(arr []int) int {
	total := 0
	odd, even := 0, 1
	ans := 0
	for _, val := range arr {
		total += val
		if total%2 == 0 {
			ans += odd
			even += 1
		} else {
			ans += even
			odd += 1
		}
	}
	return ans % (int(math.Pow10(9)) + 7)
}
